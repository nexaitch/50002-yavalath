module input_pipeline #(

    // Module to reduce metastability risk by forcing input to go through
    // a cascade of DELAY_CYCLE_COUNT dffs prior to being outputted
    // by this module. Based on pipeline.luc in library (but with comments)
    
    DELAY_CYCLE_COUNT = 1 : DELAY_CYCLE_COUNT>0 // Default is just 10ns delay
  )  (
    input clk,  // clock
    input in, // signal input
    output out // signal output
  ) {

  dff pipe[DELAY_CYCLE_COUNT](.clk(clk)); // Cascade of DELAY_CYCLE_COUNT dffs
  var i; // Variable for netlist assignment
  
  always {
  
    // Signal input to first dff
    pipe.d[0] = in;
    
    // For most dffs, output of one dff becomes input of the next
    for (i=1;i<DELAY_CYCLE_COUNT;i++){
      pipe.d[i] = pipe.q[i-1];
    }
    
    // Output is output of last dff
    out = pipe.q[DELAY_CYCLE_COUNT-1];
  }
}
