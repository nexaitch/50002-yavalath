/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    input usb_rx,
    output reg usb_tx,
    input [3:0] joystick,
    input button,
    output reg [8:0] row,
    output reg [17:0] column,
    output reg [1:0] turn
  );
  
  
  
  reg rst;
  
  wire [9-1:0] M_prealpha_rows;
  wire [9-1:0] M_prealpha_player0;
  wire [9-1:0] M_prealpha_player1;
  wire [2-1:0] M_prealpha_turn;
  reg [4-1:0] M_prealpha_joystick;
  reg [1-1:0] M_prealpha_button;
  prealpha_1 prealpha (
    .clk(clk),
    .rst(rst),
    .joystick(M_prealpha_joystick),
    .button(M_prealpha_button),
    .rows(M_prealpha_rows),
    .player0(M_prealpha_player0),
    .player1(M_prealpha_player1),
    .turn(M_prealpha_turn)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  always @* begin
    M_reset_cond_in = 1'h0;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    M_prealpha_joystick = joystick;
    M_prealpha_button = ~button;
    row = M_prealpha_rows;
    column[0+8-:9] = M_prealpha_player0;
    column[9+8-:9] = M_prealpha_player1;
    turn = M_prealpha_turn;
  end
endmodule
